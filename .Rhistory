library("faraway")
View(nepali) # Viele verschiedene Daten, 1000 Entries, bisschen weird ID
library("MASS")
View(UScereal) # 65 Einträge, Viele Metrische Daten, ich finds nicht so aussagekräftig
View(quine) # Recht simpel, aber machbar
View(mtcars) # Ist okay
View(Boston)
?Boston
?nepali
summary(nepali)
library("MASS")
View(Boston) # Geiler Datensatz aber catcht nicht wirklich
?Boston
?nepali
?Boston
summary(nepali)
summary(Boston)
View(Survey)
View(Survey)
View(survey)
?survey
?nepali
?Boston
?Boston
?Boston
library("MASS")
?Boston
summary(boston)
summary(Boston)
library("MASS")
View(Boston)
?Boston
library("MASS")
View(Boston)
?Boston
summary(Boston)
colnames(Boston) <- ("Kriminalität")
colnames(Boston)[2] <- ("Großgrundstücke")
colnames(Boston) <- c("Kriminalität", "Großgrundstücke", "Nicht-Einzelhandel", "Fluss", "Stickoxid", "Räume", "1940", "Arbeitsamt", "Radialstraße", "Steuer", "SchülerLehrer", "Schwarze", "Status", "Hauswert")
data(Boston)
summary(Boston)
colnames(Boston) <- ("Kriminalität")
colnames(Boston)[2] <- ("Großgrundstücke")
colnames(Boston) <- c("Kriminalität", "Großgrundstücke", "Nicht-Einzelhandel", "Fluss", "Stickoxid", "Räume", "1940", "Arbeitsamt", "Radialstraße", "Steuer", "SchülerLehrer", "Schwarze", "Status", "Hauswert")
data(Boston)
?Boston
summary(Boston)
View(Boston)
library("MASS")
View(Boston)
?Boston
summary(Boston)
colnames(Boston) <- ("Kriminalität")
colnames(Boston)[2] <- ("Großgrundstücke")
colnames(Boston) <- c("Kriminalität", "Großgrundstücke", "Nicht-Einzelhandel", "Fluss", "Stickoxid", "Räume", "1940", "Arbeitsamt", "Radialstraße", "Steuer", "SchülerLehrer", "Schwarze", "Status", "Hauswert")
data(Boston)
# Installiere und lade ggplot2
install.packages("ggplot2")
library(ggplot2)
hist()
View(Boston)
View(Boston)
library("MASS")
View(Boston)
?Boston
summary(Boston)
colnames(Boston) <- ("Kriminalität")
colnames(Boston)[2] <- ("Großgrundstücke")
colnames(Boston) <- c("Kriminalität", "Großgrundstücke", "Nicht-Einzelhandel", "Fluss", "Stickoxid", "Räume", "1940", "Arbeitsamt", "Radialstraße", "Steuer", "SchülerLehrer", "Schwarze", "Status", "Hauswert")
data(Boston)
View(Boston)
library("MASS")
View(Boston)
colnames(Boston) <- c("Kriminalität", "Großgrundstücke", "Nicht-Einzelhandel", "Fluss", "Stickoxid", "Räume", "1940", "Arbeitsamt", "Radialstraße", "Steuer", "SchülerLehrer", "Schwarze", "Status", "Hauswert")
data(Boston)
View(Boston)
View(Boston)
colnames(Boston) <- c("Kriminalität", "Großgrundstücke", "Nicht-Einzelhandel", "Fluss", "Stickoxid", "Räume", "1940", "Arbeitsamt", "Radialstraße", "Steuer", "SchülerLehrer", "Schwarze", "Status", "Hauswert")
data(Boston)
View(Boston)
colnames(Boston) <- c("Kriminalität", "Großgrundstücke", "Nicht-Einzelhandel", "Fluss", "Stickoxid", "Räume", "1940", "Arbeitsamt", "Radialstraße", "Steuer", "SchülerLehrer", "Schwarze", "Status", "Hauswert")
View(Boston)
data(Boston)
View(Boston)
View(Boston)
colnames(Boston) <- c("Kriminalität", "Großgrundstücke", "Nicht-Einzelhandel", "Fluss", "Stickoxid", "Räume", "1940", "Arbeitsamt", "Radialstraße", "Steuer", "SchülerLehrer", "Schwarze", "Status", "Hauswert")
View(Boston)
data(Boston) # setzt den Datensatz zurück
View(Boston)
hist(Boston$crim, Boston$chas)
hist(Boston$crim, Boston$chas, breaks = 30)
hist(Boston$crim, Boston$chas, breaks = 3)
hist(Boston$chas, Boston$crim, breaks = 3)
hist(Boston$chas)
hist(Boston$crim)
crime <- (Boston$chas = 0)
hist(Boston$crim)
hist(crime)
boxplot(crime)
boxplot(crime)
barplot(Boston$chas)
barplot(Boston$chas)
data(Boston) # setzt den Datensatz zurück
barplot(Boston$chas)
# Daten nach Flusscharakteristik
gruppierengrouped_data <- aggregate(crim ~ chas, data = Boston, FUN = mean)
# Farben für das Tortendiagramm
colors <- c("red", "blue")
# Tortendiagramm erstellen
pie(grouped_data$crim, labels = c("Nicht am Fluss", "Am Fluss"),    col = colors,    main = "Anteil der Kriminalitätsrate nach Flusscharakteristik")
# Daten nach Flusscharakteristik gruppieren
grouped_data <- aggregate(crim ~ chas, data = Boston, FUN = mean)
# Farben für das Tortendiagramm
colors <- c("red", "blue")
# Tortendiagramm erstellen
pie(grouped_data$crim, labels = c("Nicht am Fluss", "Am Fluss"),    col = colors,    main = "Anteil der Kriminalitätsrate nach Flusscharakteristik")
par(mfrow(c(2,1)))
par(mfrow=c(2,1))
# Tortendiagramm erstellen
pie(grouped_data$crim, labels = c("Nicht am Fluss", "Am Fluss"),    col = colors,    main = "Anteil der Kriminalitätsrate nach Flusscharakteristik")
# Tortendiagramm erstellen
pie(grouped_data$crim, labels = c("Nicht am Fluss", "Am Fluss"),    col = colors,    main = "Anteil der Kriminalitätsrate nach Flusscharakteristik")
# Daten nach Flusscharakteristik gruppieren
grouped_data <- aggregate(crim ~ chas, data = Boston, FUN = mean)
# Farben für das Tortendiagramm
colors <- c("red", "blue")
# Tortendiagramm erstellen
pie(grouped_data$crim, labels = c("Nicht am Fluss", "Am Fluss"),    col = colors,    main = "Anteil der Kriminalitätsrate nach Flusscharakteristik")
par(mfrow=c(2,1))
par(mfrow=c(1,1))
# Tortendiagramm erstellen
pie(grouped_data$crim, labels = c("Nicht am Fluss", "Am Fluss"),    col = colors,    main = "Anteil der Kriminalitätsrate nach Flusscharakteristik")
par(mfrow=c(1,2))
pie(Boston$crim)
pie(Boston$chas)
barplot(Boston$crim)
par(mfrow=c(1,1))
barplot(Boston$crim)
plot(Boston$cime)
plot(Boston$cim)
boxplot(Boston$cim)
boxplot(Boston$cim)
hist(Boston$cim)
hist(Boston$cim)
barplot(Boston$crim)
hist(Boston$cim)
barplot(Boston$crim)
hist(Boston$cim)
data(Boston) # setzt den Datensatz zurück
hist(Boston$cim)
library("MASS")
hist(Boston$cim)
hist(Boston$cim, breaks = 20)
data(Boston) # setzt den Datensatz zurück
hist(Boston$cim, breaks = 20)
hist(Boston$cim, breaks = 20)
hist(Boston$cim, breaks = 20)
# Index der Elemente mit den Werten 1 und 2 darstellen
index <- which(data == 1 | data == 2)
data <- c(1, 2, 1, 2, 1, 1, 2)
# Index der Elemente mit den Werten 1 und 2 darstellen
index <- which(data == 1 | data == 2)
print(index)
crime <- which(Boston$chas == 0)
boxplot(crime)
hist(crime)
crime <- which(Boston$chas == 0)
hist(chas0)
boxplot(chas0)
chas0 <- which(Boston$chas == 0)
boxplot(chas0)
chas1 <- which(Boston$chas == 1)
par(mfrow=c(1,2))
boxplot(chas0)
boxplot(chas1)
pie(chas0)
par(mfrow=c(1,1))
pie(chas0)
summary(chas0)
summary(chas1)
summary(Boston$chas)
summary(Boston)
plot(chas0, Boston$crim)
plot(chas1, Boston$crim)
coef(lm(crim ~ black, data= Boston))
View(Boston)
plot(Boston$black, Boston$crim,      xlab = "Anteil an schwarzen Einwohnern", ylab = "Kriminalitätsrate pro Kopf", main = "Zusammenhang zwischen Kriminalitätsrate und Anteil an schwarzen Einwohnern", col = "blue", pch = 16)
abline(lm(crim ~ black, data = Boston), col = "red")
coef(lm(crim ~ black, data= Boston))
# Daten nach Flusscharakteristik gruppieren
grouped_data <- aggregate(crim ~ chas, data = Boston, FUN = mean)
# Farben für das Tortendiagramm
colors <- c("red", "blue")# Tortendiagramm erstellen
pie(grouped_data$crim, labels = c("Nicht am Fluss", "Am Fluss"),    col = colors,    main = "Anteil der Kriminalitätsrate nach Flusscharakteristik")
hist(Boston$crim, breaks = 30, col = adjustcolor(c("red", "blue"), alpha.f = 0.5), xlab = "Kriminalitätsrate pro Kopf", main = "Verteilung der Kriminalitätsrate in Boston (nach Flusscharakteristik)", xlim = c(0, max(Boston$crim)), ylim = c(0, 100))
# Definierte Begrenzung der y-Achse
# Legende hinzufügen
legend("topright", legend = c("Nicht am Fluss", "Am Fluss"), fill = c("red", "blue"))
# Histogramm erstellen
hist(Boston$crim, breaks = 30, col = ifelse(Boston$chas == 1, "blue", "red"), xlab = "Kriminalitätsrate pro Kopf", main = "Verteilung der Kriminalitätsrate in Boston (nach Flusscharakteristik)", xlim = c(0, max(Boston$crim)))
# Legende hinzufügen
legend("topright", legend = c("Nicht am Fluss", "Am Fluss"), fill = c("red", "blue"))
plot(Boston$black, Boston$crim,      xlab = "Anteil an schwarzen Einwohnern", ylab = "Kriminalitätsrate pro Kopf", main = "Zusammenhang zwischen Kriminalitätsrate und Anteil an schwarzen Einwohnern", col = "blue", pch = 16)
abline(lm(crim ~ black, data = Boston), col = "red")
coef(lm(crim ~ black, data= Boston))
hist(Boston$crim, breaks = 30, col = adjustcolor(c("red", "blue"), alpha.f = 0.5), xlab = "Kriminalitätsrate pro Kopf", main = "Verteilung der Kriminalitätsrate in Boston (nach Flusscharakteristik)", xlim = c(0, max(Boston$crim)), ylim = c(0, 100))
# Histogramm erstellen
hist(Boston$crim, breaks = 30, col = ifelse(Boston$chas == 1, "blue", "red"), xlab = "Kriminalitätsrate pro Kopf", main = "Verteilung der Kriminalitätsrate in Boston (nach Flusscharakteristik)", xlim = c(0, max(Boston$crim)))
# Histogramm erstellen
hist(Boston$crim, breaks = 30, col = ifelse(Boston$chas == 1, "blue", "red"), xlab = "Kriminalitätsrate pro Kopf", main = "Verteilung der Kriminalitätsrate in Boston (nach Flusscharakteristik)", xlim = c(0, max(Boston$crim)))
# Legende hinzufügen
legend("topright", legend = c("Nicht am Fluss", "Am Fluss"), fill = c("red", "blue"))
# Definierte Begrenzung der y-Achse
# Legende hinzufügen
legend("topright", legend = c("Nicht am Fluss", "Am Fluss"), fill = c("red", "blue"))
hist(Boston$crim, breaks = 30, col = adjustcolor(c("red", "blue"), alpha.f = 0.5), xlab = "Kriminalitätsrate pro Kopf", main = "Verteilung der Kriminalitätsrate in Boston (nach Flusscharakteristik)", xlim = c(0, max(Boston$crim)), ylim = c(0, 100))
summary(zn)
summary(Boston$zn)
hist(Boston$zn)
plot(Boston$zn)
barplot(Boston$zn)
pie(Boston$zn)
hist(Boston$zn)
plot(Boston$zn)
barplot(Boston$zn)
hist(Boston$zn)
hist(Boston$zn)
barplot(Boston$zn)
par(mfrow=c(1,2))
hist(Boston$zn)
barplot(Boston$zn)
?Boston
?Boston
?Boston
library("MASS")
View(Boston)
?Boston
barplot(Boston$zn, main = "Anteil der Wohnungsgrundstück über 25.000 sq.ft.")
par(mfrow=c(1,1))
barplot(Boston$zn, main = "Anteil der Wohnungsgrundstück über 25.000 sq.ft.")
barplot(Boston$zn, main = "Anteil der Wohnungsgrundstück über 25.000 sq.ft.", ylab = "%")
summary(nox)
summary(Boston$nox)
hist(Boston$nox)
plot(Boston$nox)
barplot(Boston$nox)
boxplot(Boston$nox)
boxplot(Boston$zn)
boxplot(Boston$nox)
barplot(Boston$nox)
plot(Boston$nox)
hist(Boston$nox)
plot(Boston$nox)
hist(Boston$nox)
summary(Boston$nox)
hist(Boston$nox)
barplot(Boston$nox)
boxplot(Boston$nox)
barplot(Boston$nox)
boxplot(Boston$nox)
hist(Boston$nox)
barplot(Boston$nox)
boxplot(Boston$nox)
?Boston
barplot(Boston$nox, main = "Stickstoffoxidkonzentration pro 10 Mio.")
?Boston
barplot(Boston$nox, main = "Stickstoffoxidkonzentration", ylab = "Parts per 10 Million")
boxplot(Boston$nox)
boxplot(Boston$nox, main = "Verteilung der Stickstoffoxidkonzentration", ylab = "Parts per 10 Million")
barplot(Boston$nox, main = "Stickstoffoxidkonzentration", ylab = "Parts per 10 Million")
boxplot(Boston$nox, main = "Verteilung der Stickstoffoxidkonzentration", ylab = "Parts per 10 Million")
barplot(Boston$nox, main = "Stickstoffoxidkonzentration", ylab = "Parts per 10 Million")
boxplot(Boston$nox, main = "Verteilung der Stickstoffoxidkonzentration", ylab = "Parts per 10 Million")
summary(Boston$dis)
hist(Boston$dis)
plot(Boston$dis)
barplot(Boston$dis)
boxplot(Boston$dis)
barplot(Boston$dis)
barplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitsvermittlungszentren in Boston")
barplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitsvermittlungszentren in Boston", ylab = "km")
barplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitsvermittlungszentren in Boston", ylab = "miles")
?Boston
barplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitsvermittlungszentren in Boston", ylab = "miles")
?Boston
barplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitszentren", ylab = "Meilen")
boxplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitszentren", ylab = "Meilen")
barplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitszentren", ylab = "Meilen")
boxplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitszentren", ylab = "Meilen")
boxplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitszentren", ylab = "Meilen")
barplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitszentren", ylab = "Meilen")
boxplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitszentren", ylab = "Meilen")
summary(Boston$ptratio)
hist(Boston$ptratio)
plot(Boston$ptratio)
barplot(Boston$ptratio)
boxplot(Boston$ptratio)
barplot(Boston$ptratio)
boxplot(Boston$ptratio)
barplot(Boston$ptratio)
boxplot(Boston$ptratio)
barplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis")
boxplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis")
barplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis")
boxplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis")
barplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis")
boxplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis")
barplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis")
boxplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis")
barplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis", ylab = "Schüler pro Lehrkraft")
boxplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis", ylab = "Schüler pro Lehrkraft")
#ptratio
barplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis", ylab = "Schüler pro Lehrkraft")
boxplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis", ylab = "Schüler pro Lehrkraft")
summary(Boston$medv)
hist(Boston$medv)
plot(Boston$medv)
boxplot(Boston$medv)
barplot(Boston$medv)
hist(Boston$medv)
plot(Boston$medv)
boxplot(Boston$medv)
barplot(Boston$medv)
boxplot(Boston$medv, main = "Durchschnittswert von Eigenheimen", ylab = "in 1000 US-$")
barplot(Boston$medv, main = "Durschnittswert von Eigenheimen", ylab = "in 1000 US-$")
boxplot(Boston$medv, main = "Durchschnittswert von Eigenheimen", ylab = "in 1000 US-$")
barplot(Boston$medv, main = "Durschnittswert von Eigenheimen", ylab = "in 1000 US-$")
boxplot(Boston$medv, main = "Durchschnittswert von Eigenheimen", ylab = "in 1000 US-$")
# Subsetting der Daten für chas = 0
medv_chas_0 <- Boston$medv[Boston$chas == 0]
# Subsetting der Daten für chas = 1
medv_chas_1 <- Boston$medv[Boston$chas == 1]
# Boxplot
boxplot(medv_chas_0, medv_chas_1, names = c("nicht am Fluss", "am Fluss"), col = c("skyblue", "lightgreen"))
# Boxplot
boxplot(medv_chas_0, medv_chas_1, names = c("nicht am Fluss", "am Fluss"), col = c("skyblue", "lightgreen"), main = "Grundstückskonzentration nach Lage am Fluss")
?Boston
#für black-lstatus
plot(Boston$black, Boston$status, col = "blue", pch = 16)
abline(lm(status ~ black, data = Boston), col = "red")
#für black-lstatus
plot(Boston$black, Boston$lstat, col = "blue", pch = 16)
abline(lm(lstat ~ black, data = Boston), col = "red")
coef(lm(lstat ~ black, data= Boston))
#für black-lstatus
plot(Boston$black, Boston$lstat, col = "blue", pch = 16, ylab = "prozentualler Anteil eines niedrigen Status innerhalb der Bevölkerung", xlab = "Anteil der Schwarzen pro Stadt")
abline(lm(lstat ~ black, data = Boston), col = "red")
plot(Boston$black, Boston$lstat, col = "blue", pch = 16, ylab = "prozentualler Anteil
eines niedrigen Status innerhalb der Bevölkerung", xlab = "Anteil der Schwarzen pro Stadt")
#für black-lstatus
plot(Boston$black, Boston$lstat, col = "blue", pch = 16, ylab = "prozentualer Anteil eines niedrigen Status", xlab = "Anteil der Schwarzen pro Stadt")
abline(lm(lstat ~ black, data = Boston), col = "red")
coef(lm(lstat ~ black, data= Boston))
#für zn-tax
plot(Boston$zn, Boston$tax, col = "blue", pch = 16, ylab = "prozentualer Anteil eines niedrigen Status", xlab = "Anteil der Schwarzen pro Stadt")
abline(lm(zn ~ tax, data = Boston), col = "red")
coef(lm(zn ~ tax, data= Boston))
#für zn-tax
plot(Boston$zn, Boston$tax, col = "blue", pch = 16, ylab = "prozentualer Anteil eines niedrigen Status", xlab = "Anteil der Schwarzen pro Stadt")
abline(lm(zn ~ tax, data = Boston), col = "red")
coef(lm(zn ~ tax, data= Boston))
#für zn-tax
plot(Boston$zn, Boston$tax, col = "blue", pch = 16, ylab = "", xlab = "")
abline(lm(zn ~ tax, data = Boston), col = "red")
coef(lm(zn ~ tax, data= Boston))
?Boston
#für zn-tax
plot(Boston$zn, Boston$tax, col = "blue", pch = 16, ylab = "", xlab = "")
abline(lm(zn ~ tax, data = Boston), col = "red")
#für zn-tax
plot(Boston$tax, Boston$zn, col = "blue", pch = 16, ylab = "", xlab = "")
abline(lm(zn ~ tax, data = Boston), col = "red")
coef(lm(zn ~ tax, data= Boston))
abline(lm(tax ~ zn, data = Boston), col = "red")
coef(lm(tax ~ zn, data= Boston))
#für zn-tax
plot(Boston$tax, Boston$zn, col = "blue", pch = 16, ylab = "", xlab = "")
#für zn-tax
plot(Boston$tax, Boston$zn, col = "blue", pch = 16, ylab = "Anteil der Wohngrundstücke über 25k sq.ft. in %", xlab = "Grundsteuersatz")
abline(lm(tax ~ zn, data = Boston), col = "red")
coef(lm(tax ~ zn, data= Boston))
#für rm-medv
plot(Boston$medv, Boston$rm, col = "blue", pch = 16, ylab = "Anteil der Wohngrundstücke über 25k sq.ft. in %", xlab = "Grundsteuersatz")
#für rm-medv
plot(Boston$rn, Boston$medv, col = "blue", pch = 16, ylab = "Anteil der Wohngrundstücke über 25k sq.ft. in %", xlab = "Grundsteuersatz")
#für rm-medv
plot(Boston$rn, Boston$medv, col = "blue", pch = 16, ylab = "Anteil der Wohngrundstücke über 25k sq.ft. in %", xlab = "Grundsteuersatz")
#für rm-medv
plot(Boston$medv, Boston$rm, col = "blue", pch = 16, ylab = "Anteil der Wohngrundstücke über 25k sq.ft. in %", xlab = "Grundsteuersatz")
#für rm-medv
plot(Boston$rm, Boston$medv, col = "blue", pch = 16, ylab = "Anteil der Wohngrundstücke über 25k sq.ft. in %", xlab = "Grundsteuersatz")
#für rm-medv
plot(Boston$rm, Boston$medv, col = "blue", pch = 16, ylab = "", xlab = "")
abline(lm(rm ~ medv, data = Boston), col = "red")
coef(lm(rm ~ medv, data= Boston))
#für rm-medv
plot(Boston$rm, Boston$medv, col = "blue", pch = 16, ylab = "Durchschnittswert von Eigenheimen", xlab = "Räume pro Wohnung")
abline(lm(rm ~ medv, data = Boston), col = "red")
coef(lm(rm ~ medv, data= Boston))
#für zn-tax
#noch nicht integriert
plot(Boston$tax, Boston$zn, col = "blue", pch = 16, ylab = "Anteil der Wohngrundstücke über 25k sq.ft. in %", xlab = "Grundsteuersatz")
abline(lm(tax ~ zn, data = Boston), col = "red")
coef(lm(tax ~ zn, data= Boston))
coef(lm(tax ~ zn, data= Boston))
coef(lm(rm ~ medv, data= Boston))
#dis
barplot(Boston$dis, main = "gewichteter Mittelwert der Enfernung zu fünf Arbeitszentren", ylab = "Meilen")
#dis
barplot(Boston$dis, ylab = "Meilen")
boxplot(Boston$dis, ylab = "Meilen")
#dis
barplot(Boston$dis, ylab = "Entfernung in Meilen")
boxplot(Boston$dis, ylab = "Entfernung in Meilen")
#dis
barplot(Boston$dis, ylab = "Entfernung in Meilen")
boxplot(Boston$dis, ylab = "Entfernung in Meilen")
cor(Boston$black, Boston$crim)
cor(Boston$black, Boston$crim, method="spearman")
cov(Boston$black, Boston$crim)
cor(Boston$black, Boston$crim, method="spearman")
cor(Boston$black, Boston$crim)
#für black-lstatus
plot(Boston$black, Boston$lstat, col = "blue", pch = 16, ylab = "prozentualer Anteil eines niedrigen Status", xlab = "Anteil der Schwarzen pro Stadt")
abline(lm(lstat ~ black, data = Boston), col = "red")
coef(lm(lstat ~ black, data= Boston))
cor(Boston$black, Boston$lstat)
#für rm-medv
#muss noch überarbeitet werden
plot(Boston$rm, Boston$medv, col = "blue", pch = 16, ylab = "Durchschnittswert von Eigenheimen", xlab = "Räume pro Wohnung")
abline(lm(medv ~ rm, data = Boston), col = "red")
coef(lm(medv ~ rm, data= Boston))
cor(Boston$rm, Boston$medv)
#für zn-tax
#muss noch überarbeitet werden
plot(Boston$tax, Boston$zn, col = "blue", pch = 16, ylab = "Anteil der Wohngrundstücke über 25k sq.ft. in %", xlab = "Grundsteuersatz")
abline(lm(zn ~ tax, data = Boston), col = "red")
coef(lm(zn ~ tax, data= Boston))
cor(Boston$tax, Boston$zn)
#nox
barplot(Boston$nox, main = "Stickstoffoxidkonzentration", ylab = "Teile pro 10 Million")
boxplot(Boston$nox, main = "Verteilung der Stickstoffoxidkonzentration", ylab = "Teile pro 10 Million")
#nox
barplot(Boston$nox, ylab = "Teile pro 10 Million")
boxplot(Boston$nox, ylab = "Teile pro 10 Million")
boxplot(Boston$dis, ylab = "Entfernung in Meilen")
boxplot(Boston$ptratio, main = "Schüler-Lehrer-Verhältnis", ylab = "Schüler pro Lehrkraft")
boxplot(Boston$ptratio, ylab = "Schüler pro Lehrkraft")
barplot(Boston$medv, ylab = "in 1000 US-$")
#medv
boxplot(Boston$medv, ylab = "in 1000 US-$")
# für medv-chas
# Subsetting der Daten für chas = 0
medv_chas_0 <- Boston$medv[Boston$chas == 0]
# Subsetting der Daten für chas = 1
medv_chas_1 <- Boston$medv[Boston$chas == 1]
# Boxplot
boxplot(medv_chas_0, medv_chas_1, names = c("nicht am Fluss", "am Fluss"), col = c("skyblue", "lightgreen"), main = "Grundstückskonzentration nach Lage am Fluss")
# Boxplot
boxplot(medv_chas_0, medv_chas_1, names = c("nicht am Fluss", "am Fluss"), col = c("skyblue", "lightgreen"))
#für black-lstatus
plot(Boston$black, Boston$lstat, col = "blue", pch = 16, ylab = "prozentualer Anteil eines niedrigen Status", xlab = "Anteil der Schwarzen pro Stadt")
#zn
barplot(Boston$zn, main = "Anteil der Wohnungsgrundstück über 25.000 sq.ft.", ylab = "Anteil in %")
#zn
barplot(Boston$zn, ylab = "Anteil in %")
boxplot(Boston$tax, xlab = "Steuersatz", ylab = "Wert")
# für medv-chas
# Subsetting der Daten für chas = 0
medv_chas_0 <- Boston$medv[Boston$chas == 0]
# Subsetting der Daten für chas = 1
medv_chas_1 <- Boston$medv[Boston$chas == 1]
# Boxplot
boxplot(medv_chas_0, medv_chas_1, names = c("nicht am Fluss", "am Fluss"), col = c("skyblue", "lightgreen"))
# Boxplot
boxplot(medv_chas_0, medv_chas_1, names = c("nicht am Fluss", "am Fluss"), col = c("skyblue", "lightgreen"), ylab= "Durchschnittswert von Eigenheimen in 1000 US-$")
#für zn-medv
#muss noch überarbeitet werden
plot(Boston$rm, Boston$medv, col = "blue", pch = 16, ylab = "Durchschnittswert von Eigenheimen", xlab = "Räume pro Wohnung")
#für zn-medv
#muss noch überarbeitet werden
plot(Boston$medv, Boston$zn, col = "blue", pch = 16, ylab = "Anzahl der Grundstücke über 25.000 sq.ft.", xlab = "Durchschnittswert von Eigenheimen")
abline(lm(medv ~ rm, data = Boston), col = "red")
abline(lm(zn ~ medv, data = Boston), col = "red")
#für zn-medv
#muss noch überarbeitet werden
plot(Boston$medv, Boston$zn, col = "blue", pch = 16, ylab = "Anzahl der Grundstücke über 25.000 sq.ft.", xlab = "Durchschnittswert von Eigenheimen")
abline(lm(zn ~ medv, data = Boston), col = "red")
coef(lm(zn ~ rm, data= Boston))
#für zn-medv
#muss noch überarbeitet werden
plot(Boston$medv, Boston$zn, col = "blue", pch = 16, ylab = "Anzahl der Grundstücke über 25.000 sq.ft.", xlab = "Durchschnittswert von Eigenheimen")
abline(lm(zn ~ medv, data = Boston), col = "red")
coef(lm(zn ~ medv, data= Boston))
cor(Boston$medv, Boston$zn)
